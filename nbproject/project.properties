annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.desc=Los c\u00f3digos QR del ingl\u00e9s Quick Response Code o \nc\u00f3digo de respuesta r\u00e1pida es un tipo de c\u00f3digo para\nel almacenamiento de datos en una matriz de puntos; \npor lo general se usan en la Facturaci\u00f3n Electr\u00f3nica.\n\nDependiendo del lenguaje de programaci\u00f3n\nexisten varias alternativas disponibles en la web\n para el trabajo con c\u00f3digos QR, para el lenguaje java \ntenemos la librer\u00eda ZXing (\u201czebra crossing\u201d) el cual es una biblioteca\nde procesamiento de im\u00e1genes de c\u00f3digo de barras 1D/2D de c\u00f3digo\nabierto y multiformato implementada en Java, disponible para varios lenguajes \nde programaci\u00f3n.\n\nQR WebCam es un Lector de c\u00f3digos QR, Simple. R\u00e1pido. Gratuito. Sin anuncios.\nEscanea todos los c\u00f3digos QR, Dise\u00f1ados o Creados desde el lenjguaje de programacion Java
application.homepage=www.facebook.com/BytesCodes
application.splash=C:\\Users\\-\\Desktop\\Reader_QR_Creator.png
application.title=QR_WebCam
application.vendor=Marto Nieto G
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# Os arquivos em build.classes.dir que devem ser exclu\u00eddos do jar de distribui\u00e7\u00e3o
dist.archive.excludes=
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/QR_WebCam.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.core-2.3.0.jar=../lib/qr/core-2.3.0.jar
file.reference.opencv-249.jar-1=D:\\Marto\\Proyectos\\Librerias Java\\opencv\\opencv-249.jar
file.reference.zxing-j2se-1.7.jar=../lib/qr/zxing-j2se-1.7.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=false
jar.index=${jnlp.enabled}
javac.classpath=\
    ${file.reference.core-2.3.0.jar}:\
    ${file.reference.zxing-j2se-1.7.jar}:\
    ${file.reference.opencv-249.jar-1}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.external.vm=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.8
javac.target=1.8
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
main.class=webcam.jfmPrincipal
# Optional override of default Application-Library-Allowable-Codebase attribute identifying the locations where your signed RIA is expected to be found.
manifest.custom.application.library.allowable.codebase=
# Optional override of default Caller-Allowable-Codebase attribute identifying the domains from which JavaScript code can make calls to your RIA without security prompts.
manifest.custom.caller.allowable.codebase=
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=default_platform
project.license=gpl30
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
